# Create a ring topology running the python file. 
mn --custom createMininetRingTopologyUsingPython.py --topo ringtopo --mac --controller=remote,ip=192.168.41.2,port=6633 --switch ovs,protocols=OpenFlow13

# see available nodes
mininet> nodes
available nodes are: 
c0 h1 h2 s1 s2 s3 s4 s5
mininet> links
h1-eth0<->s1-eth1 (OK OK) 
s1-eth2<->s2-eth1 (OK OK) 
s2-eth2<->s3-eth1 (OK OK) 
s3-eth2<->s4-eth1 (OK OK) 
s4-eth2<->s5-eth1 (OK OK) 
s5-eth3<->h2-eth0 (OK OK) 
s5-eth2<->s1-eth3 (OK OK) 

# Generate ping between all hosts
mininet> pingall
*** Ping: testing ping reachability
h1 -> h2 
h2 -> h1 
*** Results: 0% dropped (2/2 received)

# See flows inside mininet switch 1 
mininet> sh ovs-ofctl dump-flows s1 -O OpenFlow13
 cookie=0x2b00000000000021, duration=267.670s, table=0, n_packets=107, n_bytes=9095, priority=100,dl_type=0x88cc actions=CONTROLLER:65535
 cookie=0x2b00000000000083, duration=261.700s, table=0, n_packets=20, n_bytes=1400, priority=2,in_port="s1-eth3" actions=output:"s1-eth1",output:"s1-eth2"
 cookie=0x2b00000000000084, duration=261.700s, table=0, n_packets=8, n_bytes=560, priority=2,in_port="s1-eth1" actions=output:"s1-eth3",output:"s1-eth2",CONTROLLER:65535
 cookie=0x2b00000000000085, duration=261.700s, table=0, n_packets=9, n_bytes=630, priority=2,in_port="s1-eth2" actions=output:"s1-eth3",output:"s1-eth1"
 cookie=0x2b00000000000021, duration=267.671s, table=0, n_packets=15, n_bytes=1282, priority=0 actions=drop
mininet> 


